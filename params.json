{"name":"ng-facebook-api","tagline":"","body":"Welcome to the ng-facebook-api\r\n===============================\r\n\r\nFacebook API wrapper for AngularJS, you don't have to worry about the configuration and\tworking principles of Facebook JS SDK, **you have only to code using our API**.\r\n\r\n**Ready and easy to use.**\r\n\r\n[Demo](http://jberta93.github.io/ng-facebook-api/demo)\r\n\r\nThe module is now under developing, in the next weeks the module will be completed and we're going to put online the official docs.\r\n\r\n##Configuration\r\n\r\n1. Download the library [clicking here](https://github.com/jberta93/ng-facebook-api/archive/master.zip) or use `bower install ng-facebook-api`\r\n2. Include [Facebook JS SDK](https://developers.facebook.com/docs/javascript/quickstart/v2.1), only the SDK not the initialization `window.fbAsyncInit` and `FB.init`\r\n3. Modify your application inject the `ng-facebook-api`\r\n4. In your application config, you **must** setup the facebookProvider with your Facebook App settings. The settings are used in [FB.init](https://developers.facebook.com/docs/javascript/reference/FB.init/)\r\n5. If your app uses extra permissions that require user approval, set in your config. You can set permissions also in the controller, obviously before using login.\r\n\r\nHere an example of configuration:\r\n```javascript\r\nangular\r\n  .module('<your-app-name>',['ng-facebook-api'])\r\n     .config(function( facebookProvider) {\r\n        /**\r\n        * Here the list of params used to configure the provider\r\n        * @param appId\r\n        * @param status\r\n        * @param xfbml\r\n        * @param cookie\r\n        * @param api-version\r\n        */\r\n\t facebookProvider.setInitParams('your-fb-app-id',true,true,true,'v2.1');\r\n\t //if your app use extra permissions set it\r\n\t facebookProvider.setPermissions(['email','read_stream']);\r\n      });\r\n```\r\n\r\n\r\n**Important:** You must include the JS SDK in your `<head>` or in method `.run(function(){})` of angular app.\r\n\r\n##Usage\r\n\r\nThe provider permits to have an easy access to the most used api (like user info retriving, avatar, etc..) but it also permits, thanks to `api` method, to used all methods of [Graph API](https://developers.facebook.com/docs/graph-api/reference/).\r\n\r\nEvery methods check the login status and if user isn't logged, it launches the login procedure. Anyway the provider has public methods `login` and `checkLoginStatus` to implement your custom flows. \r\n\r\n### Check SDK Loading\r\n\r\nIn your controller listen on the `$rootScope` the event `fb.init`\r\n\r\n```javascript\r\nmodule.controller('MainCtrl', function ($rootScope,$scope, facebook) {\r\n\t$rootScope.$on(\"fb.init\",function(){\r\n\t    console.log(\"SDK Ready\");\r\n\t});\r\n});\r\n```\r\n\r\n### Run the method\r\n\r\nRun the method that you need. For instance: `getUser` to obtain available user information.\r\n\r\n```javascript\r\nmodule.controller('MainCtrl', function ($rootScope,$scope, facebook) {\r\n\t$rootScope.$on(\"fb.init\",function(){\r\n\t    console.log(\"SDK Ready\");\r\n\t    facebook.getUser().then(function(r){\r\n\t    \tconsole.log(r.user); //User data returned;\r\n\t    \tconsole.log(r.authResponse); //Token auth, id etc..\r\n\t    }, function(err){\r\n\t    \tconsole.log(\"Ops, something went wrong...\");\r\n\t    });\r\n\t    \r\n\t});\r\n});\r\n```\r\n\r\n###Documentation\r\n\r\nThe official docs wiki is [here](https://github.com/jberta93/ng-facebook-api/wiki/Home)\r\n\r\n#### Enum\r\n* [API_METHOD](https://github.com/jberta93/ng-facebook-api/wiki/API_METHOD) | The HTTP method that you can use to call the api.\r\n* [PICTURE_TYPE](https://github.com/jberta93/ng-facebook-api/wiki/PICTURE_TYPE) | When you get user profile image use this to indicate a pre-specified size of picture.\r\n\r\n#### Method\r\n\r\n* [api(path, method, params)](https://github.com/jberta93/ng-facebook-api/wiki/api) | It permits to call the Graph API\r\n* [checkLoginStatus()](https://github.com/jberta93/ng-facebook-api/wiki/checkLoginStatus) | It checks if user isn't logged and launch login procedure.\r\n* [getUser(id, fields)](https://github.com/jberta93/ng-facebook-api/wiki/getUser) | It retrives  available user (depends on requested permissions) information.\r\n* [getUserPicture(id,fields)](https://github.com/jberta93/ng-facebook-api/wiki/getUserPicture) |  It retrives user's profile picture.\r\n* [login()](https://github.com/jberta93/ng-facebook-api/wiki/login) \r\n* [logout()](https://github.com/jberta93/ng-facebook-api/wiki/logout) \r\n* [setPermissions(permissions)](https://github.com/jberta93/ng-facebook-api/wiki/setPermissions) | It set the permissions that the Facebook App need to do it work.\r\n\r\n\r\n##Versions\r\n\r\n### 0.1.0 \r\nFirst stable version.\r\n\r\n## Next Version\r\n\r\n**Version: 0.2.0**\r\n\r\n**Estimated release: 22-26 Oct 2014**\r\n\r\n* Minor bug fixing\r\n* Add cache for the methods that wrap `api` method.\r\n* New easy method:\r\n   * getUserFeed() -> It fetches user feed post.\r\n   * getUserPhotos() -> It gets user's photos.\r\n   * createPost() -> It permits to post on user's feed.\r\n\r\nLicense\r\n===============================\r\nThis project is released over [MIT license](http://opensource.org/licenses/MIT \"MIT License\")\r\n\r\nAuthor\r\n===============================\r\n[Lorenzo Bertacchi](http://www.lorenzobertacchi.it/)\r\n","google":"UA-55524976-1","note":"Don't delete this file! It's used internally to help with page regeneration."}